library identifier: "pipeline-library@v1.5",
retriever: modernSCM(
  [
    $class: "GitSCMSource",
    remote: "https://github.com/redhat-cop/pipeline-library.git" 
  ]
)

def appName = "node-app-backend"

pipeline {
    agent any
    stages {
        stage("Checkout") {
            steps {
                checkout scm
            }
        }
        stage("Docker Build") {
           when {
                allOf {
                    changeset "config/**"
                    changeset "controllers/**"
                    changeset "models/**"
                    changeset "routes/**"
                    changeset "dockerfile"
                    changeset "package.json"
                    changeset "package-lock.json"
                }
            }
            steps {
                binaryBuild(buildConfigName: appName, buildFromPath: ".")
            }
        }
        stage("Tag image") {
            when {
            allOf{
                expression {
                    return currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
                    changeset "config/**"
                    changeset "controllers/**"
                    changeset "models/**"
                    changeset "routes/**"
                    changeset "dockerfile"
                    changeset "package.json"
                    changeset "package-lock.json"
            }
            }
            steps {
                tagImage([
                    sourceImagePath: "dhanya-jenkins",
                    sourceImageName: "node-server",
                    sourceImageTag : "latest",
                    toImagePath: "dhanya-jenkins",
                    toImageName    : "node-server",
                    toImageTag     : "${env.BUILD_NUMBER}"
                ])
            }
        }
        stage("Trigger Deployment Update Pipeline front"){
     when {
    allOf {
      expression {
        currentBuild.result == null || currentBuild.result == 'SUCCESS'
      }
                  changeset "config/**"
                    changeset "controllers/**"
                    changeset "models/**"
                    changeset "routes/**"
                    changeset "dockerfile"
                    changeset "package.json"
                    changeset "package-lock.json"
    }
  }
        steps{
          build job:'node-update-deployment-back' , parameters: [string(name: 'DOCKERTAG',value: env.BUILD_NUMBER)]
        }
      }
    }
}

   
