library identifier: "pipeline-library@v1.5",
retriever: modernSCM(
  [
    $class: "GitSCMSource",
    remote: "https://github.com/redhat-cop/pipeline-library.git" 
  ]
)

def appName = "node-app-backend"

pipeline {
    agent any
    stages {
        stage("Checkout") {
            steps {
                checkout scm
            }
        }
        stage("Docker Build") {
            when {
                changeset "config/**", changeset "controllers/**", changeset "models/**", changeset "routes/**"
                changeset "dockerfile", changeset "package.json", changeset "package-lock.json"
            }
            steps {
                binaryBuild(buildConfigName: appName, buildFromPath: ".")
            }
        }
        stage("Tag image") {
            when {
                expression {
                    return currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                tagImage([
                    sourceImagePath: "dhanya-jenkins",
                    sourceImageName: "node-server",
                    sourceImageTag : "latest",
                    toImagePath: "dhanya-jenkins",
                    toImageName    : "node-server",
                    toImageTag     : "${env.BUILD_NUMBER}"
                ])
            }
        }
    }
}

    /*  stage('deploy') {
        steps {
            script {
                openshift.withCluster() {
                    openshift.withProject("$PROJECT_NAME") {
                        echo "Using project: ${openshift.project()}"
                         sh 'oc project "$PROJECT_NAME" '
                         sh 'oc apply -f pod.yaml'
                    }
                }
            }
    }
 }
   }
}*/
